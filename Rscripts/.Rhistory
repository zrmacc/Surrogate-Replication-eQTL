pwr <- mean(data$Bivariate <= k_alpha)
pwr
rho <- as.numeric(gsub(pattern = ".*_R([0-9]+)_.*", replacement = "\\1", x = file)
# Missingness
mt <- as.numeric(gsub(pattern = ".*_MT([0-9]+)_.*", replacement = "\\1", x = D[i]))
ms <- as.numeric(gsub(pattern = ".*_MS([0-9]+)_.*", replacement = "\\1", x = D[i]))
# PVE
pve <- as.numeric(gsub(pattern = ".*_PVE([0-9]+)_.*", replacement = "\\1", x = D[i]))
}
# -----------------------------------------------------------------------------
# 1. Target-Missing
# -----------------------------------------------------------------------------
files <- dir()
files <- files[grepl(pattern = ".*_Master\\.rds", x = files)]
# Target missing only.
files_target_miss <- files[grepl(pattern = ".*_MS0_.*", x = files)]
files_surr_miss <- files[!grepl(pattern = ".*_MS0_.*", x = files)]
if (TRUE) {
# Loop over files
i <- 1
Data <- foreach(i = 1:n, .combine = rbind) %do% {
# Import
Data <- readRDS(file = D[i])
# Determine color
r <- as.numeric(gsub(pattern = ".*_R([0-9]+)_.*", replacement = "\\1", x = D[i]))
# Missingness
mt <- as.numeric(gsub(pattern = ".*_MT([0-9]+)_.*", replacement = "\\1", x = D[i]))
ms <- as.numeric(gsub(pattern = ".*_MS([0-9]+)_.*", replacement = "\\1", x = D[i]))
# PVE
pve <- as.numeric(gsub(pattern = ".*_PVE([0-9]+)_.*", replacement = "\\1", x = D[i]))
# Output
power.biv <- as.numeric(Data[(Data$Method == "Biv" & Data$Alpha == 1e-5), "Power"])
power.uni <- as.numeric(Data[(Data$Method == "Uni" & Data$Alpha == 1e-5), "Power"])
Out <- data.table("Rho" = r, "mT" = mt, "mS" = ms, "PVE" = pve, "Power.Biv" = power.biv, "Power.Uni" = power.uni)
return(Out)
}
Data <- missingnessCoord(Data)
n <- length(unique(Data$Coord))
Q <- foreach(i = 1:n) %do% {
return(powerPlot(Data[Data$Coord == i, ]))
}
Q <- plot_grid(plotlist = Q, ncol = 2)
# Save
setwd("~/Documents/Lab/Projects/Surrogates/")
fout <- "Figures/1K/Target-Missing/Power-Curves.png"
ggsave(
plot = Q,
filename = fout,
device = "png",
scale = 1,
width = 6.5,
height = 3.0,
units = "in",
dpi = 360
)
}
########################
# 1. Target-Surrogate-Missing
########################
if (T) {
setwd(base.dir)
setwd("Target-Surrogate-Missing/Power/")
# Files
D <- dir()
D <- D[grepl(pattern = ".*_Master\\.rds", x = D)]
n <- length(D)
# Loop over files
i <- 1
Data <- foreach(i = 1:n, .combine = rbind) %do% {
# Import
Data <- readRDS(file = D[i])
# Determine color
r <- as.numeric(gsub(pattern = ".*_R([0-9]+)_.*", replacement = "\\1", x = D[i]))
# Missingness
mt <- as.numeric(gsub(pattern = ".*_MT([0-9]+)_.*", replacement = "\\1", x = D[i]))
ms <- as.numeric(gsub(pattern = ".*_MS([0-9]+)_.*", replacement = "\\1", x = D[i]))
# PVE
pve <- as.numeric(gsub(pattern = ".*_PVE([0-9]+)_.*", replacement = "\\1", x = D[i]))
# Output
power.biv <- as.numeric(Data[(Data$Method == "Biv" & Data$Alpha == 1e-5), "Power"])
power.uni <- as.numeric(Data[(Data$Method == "Uni" & Data$Alpha == 1e-5), "Power"])
Out <- data.table("Rho" = r, "mT" = mt, "mS" = ms, "PVE" = pve, "Power.Biv" = power.biv, "Power.Uni" = power.uni)
return(Out)
}
Data <- missingnessCoord(Data)
n <- length(unique(Data$Coord))
Q <- foreach(i = 1:n) %do% {
return(powerPlot(Data[Data$Coord == i, ]))
}
Q <- plot_grid(plotlist = Q, ncol = 1)
# Save
setwd("~/Documents/Lab/Projects/Surrogates/")
fout <- "Figures/1K/Target-Surrogate-Missing/Power-Curves.png"
ggsave(
plot = Q,
filename = fout,
device = "png",
scale = 1,
width = 6.5,
height = 6.0,
units = "in",
dpi = 360
)
}
rho <- as.numeric(gsub(pattern = ".*_R([0-9]+)_.*", replacement = "\\1", x = file))
rho
rho <- as.numeric(gsub(pattern = ".*_R([0-9]+)_.*", replacement = "\\1", x = file))
mt <- as.numeric(gsub(pattern = ".*_MT([0-9]+)_.*", replacement = "\\1", x = file))
ms <- as.numeric(gsub(pattern = ".*_MS([0-9]+)_.*", replacement = "\\1", x = file))
rho
mt
ms
pve <- as.numeric(gsub(pattern = ".*_PVE([0-9]+)_.*", replacement = "\\1", x = file))
file
pve <- as.numeric(gsub(pattern = ".*_PVE([0-9]+.*)_.*", replacement = "\\1", x = file))
pve
mt
ms
out <- data.frame(
"rho" = rho,
"mt" = mt,
"ms" = ms,
"pve" = pve,
"power" = pwr
)
out
Loop <- function(file) {
data <- readRDS(file = file)
pwr <- mean(data$Bivariate <= k_alpha)
rho <- as.numeric(gsub(pattern = ".*_R([0-9]+)_.*", replacement = "\\1", x = file))
mt <- as.numeric(gsub(pattern = ".*_MT([0-9]+)_.*", replacement = "\\1", x = file))
ms <- as.numeric(gsub(pattern = ".*_MS([0-9]+)_.*", replacement = "\\1", x = file))
pve <- as.numeric(gsub(pattern = ".*_PVE([0-9]+.*)_.*", replacement = "\\1", x = file))
out <- data.frame(
"rho" = rho,
"mt" = mt,
"ms" = ms,
"pve" = pve,
"power" = pwr
)
return(out)
}
# Import data.
data <- lapply(files, Loop)
data
data <- do.call(rbind, data)
data
px <- unique(data[, c("mt", "ms")])
px
px$coord <- seq_len(nrow(px))
px
data <- merge(
x = data,
y = px,
by = c("mt", "ms"),
all.x = TRUE
)
data
data$coord = NULL
# Split by surrogate missingness.
data_sobs <- data[data$ms == 0, ]
data_smis <- data[data$ms  > 0, ]
data_smis
data
data_sobs <- MissCoord(data_sobs)
#' Missingness Coordinate.
#'
#' @param data As returned by [Loop].
#' @return Data with missingness coordinate added.
MissCoord <- function(data) {
px <- unique(data[, c("mt", "ms")])
px$coord <- seq_len(nrow(px))
data <- merge(
x = data,
y = px,
by = c("mt", "ms"),
all.x = TRUE
)
return(data)
}
# Create factors
mt <- as.numeric(unique(data$mt))
ms <- as.numeric(unique(data$ms))
mt
ms
data_sobs <- MissCoord(data_sobs)
data_smis <- MissCoord(data_smis)
data_sobs
# Plot surrogate observed.
data_sobs_split <- split(data_sobs, data_sobs$coord)
data_sobs_split
all_data <- data
data <- data_sobs_split[[1]]
data
# Create factors
mt <- as.numeric(unique(data$mt))
ms <- as.numeric(unique(data$ms))
data
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
geom_point(aes(x = pve, y = power, color = rho))
library(ggplot2)
# Library
library(cowplot)
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
geom_point(aes(x = pve, y = power, color = rho))
q
data$rho <- factor(data$rho, levels = sort(unique(data$rho)), ordered = TRUE)
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
geom_point(aes(x = pve, y = power, color = rho))
q
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
geom_point(aes(x = pve, y = power, color = rho)) +
geom_line(aes(x = pve, y = power, color = rho))
q
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
geom_point(aes(x = pve, y = power, color = rho)) +
geom_line(aes(x = pve, y = power, color = rho)) +
scale_color_manual(name = expression(rho ~ "(%)"), values = biv_palette)
q
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
geom_point(aes(x = pve, y = power, color = rho)) +
geom_line(aes(x = pve, y = power, color = rho)) +
scale_color_manual(name = expression(rho ~ "(%)"), values = biv_palette) +
scale_x_continuous(name = "Heritability (%)", breaks = sort(unique(data$pve)))
q
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
geom_point(aes(x = pve, y = power, color = rho)) +
geom_line(aes(x = pve, y = power, color = rho)) +
scale_color_manual(name = expression(rho ~ "(%)"), values = biv_palette) +
scale_x_continuous(name = "Heritability (%)", breaks = sort(unique(data$pve))) +
scale_y_continuous(
name = "Power",
breaks = seq(from = 0, to = 1.0, by = 0.1),
limits = c(0, 1.0)
)
q
# Plot title.
title <- bquote(pi[T]:.(mt) * "%," ~ pi[S]:.(ms) * "%")
title
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
geom_point(aes(x = pve, y = power, color = rho)) +
geom_line(aes(x = pve, y = power, color = rho)) +
scale_color_manual(name = expression(rho ~ "(%)"), values = biv_palette) +
scale_x_continuous(
name = "Per-SNP Heritability (%)",
breaks = sort(unique(data$pve))
) +
scale_y_continuous(
name = "Power",
breaks = seq(from = 0, to = 1.0, by = 0.1),
limits = c(0, 1.0)
) +
ggtitle(label = title)
q
PlotPower <- function(data) {
# Create factors
mt <- as.numeric(unique(data$mt))
ms <- as.numeric(unique(data$ms))
data$rho <- factor(data$rho, levels = sort(unique(data$rho)), ordered = TRUE)
data$mt <- factor(data$mt, levels = sort(unique(data$mt)), ordered = TRUE)
data$ms <- factor(data$ms, levels = sort(unique(data$ms)), ordered = TRUE)
# Plot title.
title <- bquote(pi[T]:.(mt) * "%," ~ pi[S]:.(ms) * "%")
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
geom_point(aes(x = pve, y = power, color = rho)) +
geom_line(aes(x = pve, y = power, color = rho)) +
scale_color_manual(name = expression(rho ~ "(%)"), values = biv_palette) +
scale_x_continuous(
name = "Per-SNP Heritability (%)",
breaks = sort(unique(data$pve))
) +
scale_y_continuous(
name = "Power",
breaks = seq(from = 0, to = 1.0, by = 0.1),
limits = c(0, 1.0)
) +
ggtitle(label = title)
return(q)
}
data_sobs_plots <- lapply(data_sobs_split, PlotPower)
sobs_lots <- cowplot::plot_grid(
plotlist = data_sobs_plots,
ncol = 2
)
sobs_plots <- cowplot::plot_grid(
plotlist = data_sobs_plots,
ncol = 2
)
sobs_plots
ggsave(
filename = "Figures/power_sobs.png",
device = "png",
width = 6.5,
height = 6.0,
units = "in",
dpi = 360
)
ggsave(
plot = sobs_plots,
filename = "Figures/power_sobs.png",
device = "png",
width = 6.5,
height = 6.0,
units = "in",
dpi = 360
)
setwd("../..")
# Base directory.
base_dir <- getwd()
setwd(params$dir)
setwd("Test/Power/")
setwd(base_dir)
ggsave(
plot = sobs_plots,
filename = "Figures/power_sobs.png",
device = "png",
width = 6.5,
height = 6.0,
units = "in",
dpi = 360
)
PlotPower <- function(data) {
# Create factors
mt <- as.numeric(unique(data$mt))
ms <- as.numeric(unique(data$ms))
data$rho <- factor(data$rho, levels = sort(unique(data$rho)), ordered = TRUE)
data$mt <- factor(data$mt, levels = sort(unique(data$mt)), ordered = TRUE)
data$ms <- factor(data$ms, levels = sort(unique(data$ms)), ordered = TRUE)
# Plot title.
title <- bquote(pi[T]:.(mt) * "%," ~ pi[S]:.(ms) * "%")
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
geom_point(aes(x = pve, y = power, color = rho)) +
geom_line(aes(x = pve, y = power, color = rho)) +
scale_color_manual(name = expression(rho ~ "(%)"), values = biv_palette) +
scale_x_continuous(
name = "Per-SNP Heritability (%)",
breaks = sort(unique(data$pve))
) +
scale_y_continuous(
name = "Power",
breaks = seq(from = 0, to = 1.0, by = 0.2),
limits = c(0, 1.0)
) +
ggtitle(label = title)
return(q)
}
# Plot surrogate observed.
data_sobs_split <- split(data_sobs, data_sobs$coord)
data_sobs_plots <- lapply(data_sobs_split, PlotPower)
sobs_plots <- cowplot::plot_grid(
plotlist = data_sobs_plots,
ncol = 2
)
setwd(base_dir)
ggsave(
plot = sobs_plots,
filename = "Figures/power_sobs.png",
device = "png",
width = 6.5,
height = 6.0,
units = "in",
dpi = 360
)
ggsave(
plot = sobs_plots,
filename = "Figures/power_sobs.png",
device = "png",
width = 6.5,
height = 5.5,
units = "in",
dpi = 360
)
PlotPower <- function(data) {
# Create factors
mt <- as.numeric(unique(data$mt))
ms <- as.numeric(unique(data$ms))
data$rho <- factor(data$rho, levels = sort(unique(data$rho)), ordered = TRUE)
data$mt <- factor(data$mt, levels = sort(unique(data$mt)), ordered = TRUE)
data$ms <- factor(data$ms, levels = sort(unique(data$ms)), ordered = TRUE)
# Plot title.
title <- bquote(pi[T]:.(mt) * "%," ~ pi[S]:.(ms) * "%")
# Bivariate plot
q <- ggplot(data = data) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) +
geom_point(aes(x = pve, y = power, color = rho)) +
geom_line(aes(x = pve, y = power, color = rho)) +
scale_color_manual(name = expression(rho ~ "(%)"), values = biv_palette) +
scale_x_continuous(
name = "Per-SNP Heritability (%)",
breaks = sort(unique(data$pve))
) +
scale_y_continuous(
name = "Power",
breaks = seq(from = 0, to = 1.0, by = 0.2),
limits = c(0, 1.0)
) +
ggtitle(label = title)
return(q)
}
# Plot surrogate observed.
data_sobs_split <- split(data_sobs, data_sobs$coord)
data_sobs_plots <- lapply(data_sobs_split, PlotPower)
sobs_plots <- cowplot::plot_grid(
plotlist = data_sobs_plots,
ncol = 2
)
setwd(base_dir)
ggsave(
plot = sobs_plots,
filename = "Figures/power_sobs.png",
device = "png",
width = 6.5,
height = 5.5,
units = "in",
dpi = 360
)
setwd(base_dir)
ggsave(
plot = sobs_plots,
filename = "Figures/power_sobs.png",
device = "png",
width = 7.5,
height = 5.5,
units = "in",
dpi = 360
)
# Plot surrogate missing
data_smis_split <- split(data_smis, data_smis$coord)
data_smis_plots <- lapply(data_smis_split, PlotPower)
setwd(base_dir)
ggsave(
plot = sobs_plots,
filename = "Figures/power_smis.png",
device = "png",
width = 5.5,
height = 7.5,
units = "in",
dpi = 360
)
ggsave(
plot = smis_plots
ggsave(
plot = smis_plots
# Plot surrogate missing.
data_smis_split <- split(data_smis, data_smis$coord)
data_smis_plots <- lapply(data_smis_split, PlotPower)
smis_plots <- cowplot::plot_grid(
plotlist = data_smis_plots,
ncol = 1
)
setwd(base_dir)
ggsave(
plot = smis_plots,
filename = "Figures/power_smis.png",
device = "png",
width = 5.5,
height = 7.5,
units = "in",
dpi = 360
)
100 * 100 * 10
# Base directory.
base_dir <- getwd()
base_dir
# Packages.
library(optparse)
library(SurrogateRegression)
setwd("Rscripts/")
source("SimLoops.R")
base_dir <- getwd()
base_dir <- getwd()
setwd(base_dir)
